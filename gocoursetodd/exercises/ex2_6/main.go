/*
Find a problem at projecteuler.net then create the solution.
Add a comment beneath your solution that includes a description of the problem.
Upload your solution to github. Tweet me a link to your solution.
*/

// main
package main

import (
	"fmt"
)

/*
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/
func fibonacci(n int) []int {
	ns := []int{}
	xs := []int{}
	var (
		fst int
		snd int
	)
	fst, snd = 0, 1
	ns = append(ns, fst, snd)
	if n <= 2 {
		return ns
	}
	for {
		thd := fst + snd
		if thd >= 4000000 {
			break
		}
		fst, snd = snd, thd
		ns = append(ns, thd)
	}
	for _, x := range ns {
		if x%2 == 0 {
			xs = append(xs, x)
		}
	}
	return xs
}

func main() {
	fmt.Println("Hello World!")
	fmt.Println(func() int {
		sum := 0
		xs := fibonacci(4000000)
		for _, x := range xs {
			sum += x
		}
		return sum
	}())
}
